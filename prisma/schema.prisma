generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model comments {
  comment_id        Int         @id @default(autoincrement())
  property_id       Int?
  user_id           Int?
  comment_text      String?     @db.Text
  created_at        DateTime?   @default(now()) @db.Timestamp(0)
  parent_comment_id Int?
  properties        properties? @relation(fields: [property_id], references: [property_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_1")
  users             users?      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "comments_ibfk_2")
  comments          comments?   @relation("commentsTocomments", fields: [parent_comment_id], references: [comment_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_parent_comment")
  other_comments    comments[]  @relation("commentsTocomments")

  @@index([property_id], map: "property_id")
  @@index([user_id], map: "user_id")
  @@index([parent_comment_id], map: "fk_parent_comment")
}

model notifications {
  notification_id Int                   @id @default(autoincrement())
  user_id         Int?
  title           String                @db.VarChar(255)
  message         String                @db.Text
  type            notifications_type?   @default(comment)
  status          notifications_status? @default(unread)
  created_at      DateTime?             @default(now()) @db.Timestamp(0)
  updated_at      DateTime?             @default(now()) @db.Timestamp(0)
  link            String?               @db.Text
  users           users?                @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "notifications_ibfk_1")

  @@index([user_id], map: "user_id")
}

model properties {
  property_id         Int                          @id @default(autoincrement())
  name                String                       @db.VarChar(255)
  description         String?                      @db.Text
  public_price        Int
  area                Float?                       @db.Float
  status              properties_status?           @default(available)
  thumbnail_url       String?                      @db.VarChar(255)
  created_at          DateTime?                    @default(now()) @db.Timestamp(0)
  updated_at          DateTime?                    @default(now()) @db.Timestamp(0)
  cost_price          Int?
  province            String?                      @db.VarChar(255)
  district            String?                      @db.VarChar(255)
  ward                String?                      @db.VarChar(255)
  coordinates         String?                      @db.VarChar(255)
  house_direction     properties_house_direction
  number_of_bedrooms  Int?
  legal_status        String?                      @db.VarChar(255)
  balcony_direction   properties_balcony_direction
  number_of_bathrooms Int?
  furniture           String?                      @db.VarChar(255)
  house_number        String?                      @db.VarChar(50)
  description_detail  String?                      @db.VarChar(255)
  price_difference    Int?
  address             String?                      @db.VarChar(255)
  comments            comments[]
  property_images     property_images[]
  save                save[]
  transactions        transactions[]
  type_properties     type_properties[]
}

model property_images {
  image_id    Int        @id @default(autoincrement())
  property_id Int
  image_url   String     @db.VarChar(255)
  uploaded_at DateTime?  @default(now()) @db.Timestamp(0)
  properties  properties @relation(fields: [property_id], references: [property_id], onDelete: NoAction, onUpdate: NoAction, map: "property_images_ibfk_1")

  @@index([property_id], map: "property_id")
}

model save {
  user_id     Int
  property_id Int
  date_save   DateTime?  @db.Date
  users       users      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "save_ibfk_1")
  properties  properties @relation(fields: [property_id], references: [property_id], onDelete: NoAction, onUpdate: NoAction, map: "save_ibfk_2")

  @@id([user_id, property_id])
  @@index([property_id], map: "property_id")
}

model type_properties {
  typePropertiesId   Int                                @id @default(autoincrement())
  propertyId         Int
  typePropertiesName type_properties_typePropertiesName
  properties         properties                         @relation(fields: [propertyId], references: [property_id], onDelete: NoAction, onUpdate: NoAction, map: "type_properties_ibfk_1")

  @@index([propertyId], map: "propertyId")
}

model users {
  user_id                                       Int             @id @default(autoincrement())
  name                                          String          @db.VarChar(50)
  email                                         String          @unique(map: "email") @db.VarChar(50)
  password                                      String          @db.VarChar(255)
  phone                                         String?         @db.VarChar(15)
  role_name                                     users_role_name
  face_id                                       String?         @db.VarChar(255)
  refresh_token                                 String?         @db.Text
  created_at                                    DateTime?       @default(now()) @db.Timestamp(0)
  updated_at                                    DateTime?       @default(now()) @db.Timestamp(0)
  access_token                                  String?         @db.Text
  avartar_url                                   String?         @db.Text
  reset_token                                   String?         @db.Text
  comments                                      comments[]
  notifications                                 notifications[]
  save                                          save[]
  transactions_transactions_moderator_idTousers transactions[]  @relation("transactions_moderator_idTousers")
}

model banners {
  banner_id  Int       @id @default(autoincrement())
  title      String    @db.VarChar(255)
  image_url  String    @db.VarChar(255)
  link_url   String?   @db.VarChar(255)
  start_date DateTime? @default(now()) @db.Timestamp(0)
  end_date   DateTime? @db.Timestamp(0)
}

model transactions {
  inquiry_id                             Int                  @id @default(autoincrement())
  property_id                            Int
  moderator_id                           Int
  status                                 transactions_status? @default(pending)
  created_at                             DateTime?            @default(now()) @db.Timestamp(0)
  updated_at                             DateTime?            @default(now()) @db.Timestamp(0)
  properties                             properties           @relation(fields: [property_id], references: [property_id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_1")
  users_transactions_moderator_idTousers users                @relation("transactions_moderator_idTousers", fields: [moderator_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_3")

  @@index([moderator_id], map: "moderator_id")
  @@index([property_id], map: "property_id")
}

model daily_transactions_stats {
  stat_id                  Int      @id @default(autoincrement())
  transaction_date         DateTime @unique
  transaction_total_perday Int      @default(0)
  total_revenue_perday     Int      @default(0)
  created_at               DateTime @default(now())
  updated_at               DateTime @updatedAt
}

model administrative_regions {
  id           Int         @id
  name         String      @db.VarChar(255)
  name_en      String      @db.VarChar(255)
  code_name    String?     @db.VarChar(255)
  code_name_en String?     @db.VarChar(255)
  provinces    provinces[]
}

model administrative_units {
  id            Int         @id
  full_name     String?     @db.VarChar(255)
  full_name_en  String?     @db.VarChar(255)
  short_name    String?     @db.VarChar(255)
  short_name_en String?     @db.VarChar(255)
  code_name     String?     @db.VarChar(255)
  code_name_en  String?     @db.VarChar(255)
  districts     districts[]
  provinces     provinces[]
  wards         wards[]
}

model districts {
  code                   String                @id @db.VarChar(20)
  name                   String                @db.VarChar(255)
  name_en                String?               @db.VarChar(255)
  full_name              String?               @db.VarChar(255)
  full_name_en           String?               @db.VarChar(255)
  code_name              String?               @db.VarChar(255)
  province_code          String?               @db.VarChar(20)
  administrative_unit_id Int?
  administrative_units   administrative_units? @relation(fields: [administrative_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  provinces              provinces?            @relation(fields: [province_code], references: [code], onDelete: NoAction, onUpdate: NoAction)
  wards                  wards[]

  @@index([province_code], map: "idx_districts_province")
  @@index([administrative_unit_id], map: "idx_districts_unit")
}

model provinces {
  code                     String                  @id @db.VarChar(20)
  name                     String                  @db.VarChar(255)
  name_en                  String?                 @db.VarChar(255)
  full_name                String                  @db.VarChar(255)
  full_name_en             String?                 @db.VarChar(255)
  code_name                String?                 @db.VarChar(255)
  administrative_unit_id   Int?
  administrative_region_id Int?
  districts                districts[]
  administrative_regions   administrative_regions? @relation(fields: [administrative_region_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  administrative_units     administrative_units?   @relation(fields: [administrative_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([administrative_region_id], map: "idx_provinces_region")
  @@index([administrative_unit_id], map: "idx_provinces_unit")
}

model wards {
  code                   String                @id @db.VarChar(20)
  name                   String                @db.VarChar(255)
  name_en                String?               @db.VarChar(255)
  full_name              String?               @db.VarChar(255)
  full_name_en           String?               @db.VarChar(255)
  code_name              String?               @db.VarChar(255)
  district_code          String?               @db.VarChar(20)
  administrative_unit_id Int?
  administrative_units   administrative_units? @relation(fields: [administrative_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  districts              districts?            @relation(fields: [district_code], references: [code], onDelete: NoAction, onUpdate: NoAction)

  @@index([district_code], map: "idx_wards_district")
  @@index([administrative_unit_id], map: "idx_wards_unit")
}

enum notifications_type {
  comment
  general
}

enum notifications_status {
  unread
  read
}

enum properties_status {
  available
  sold
  pending
}

enum users_role_name {
  admin
  employee
  user
  moderator
  manager
}

enum properties_house_direction {
  North
  Northeast
  East
  Southeast
  South
  Southwest
  West
  Northwest
}

enum properties_balcony_direction {
  North
  Northeast
  East
  Southeast
  South
  Southwest
  West
  Northwest
}

enum transactions_status {
  pending
  in_progress
  completed
}

enum type_properties_typePropertiesName {
  Apartment
  OfficeBuilding
  ShoppingCenter
  NewUrbanArea
  MixedUseDevelopment
  SocialHousing
  EcoResort
  IndustrialPark
  SemiDetachedVilla
  Shophouse
  Townhouse
  OtherProject
  BeachLand
  PerennialCropLand
  Villa
  ResidentialPlot
  StreetHouse
  LuxuryApartment
}
